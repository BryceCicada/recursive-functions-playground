let
  id=P^1_0,
  add=id:S.(P^3_1),
  f0=0:P^2_1,
  mul=f0:add.(P^3_1,P^3_2)
in
  mul

# mul(n,m) will recursively apply the addition of constant n a total of m times to the constant 0.
#
# There is one minor difference to the common definition of multiplication in PRFs.
# The base case function for multiplication must return the constant 0.
# Often, the definition of PRFs includes such a 1-ary constant function.  However, we
# have no such function, and must define it.  'f0' above is that 1-ary function.
#
# For example:
#
#   mul(0,2) = f(0)
#            = 0:P^2_1(0)
#            = 0
#
#   mul(1,2) = add.(P^3_1,P^3_2)(0, mul(0,2), 2)
#            = add.(P^3_1,P^3_2)(0, 0, 2)
#            = add(0,2)
#            = 2
#
#   mul(2,2) = add.(P^3_1,P^3_2)(1, mul(1,2), 2)
#            = add.(P^3_1,P^3_2)(0, 2, 2)
#            = add(2,2)
#            = 4
